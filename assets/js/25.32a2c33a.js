(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{380:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("a",{attrs:{href:"https://gitee.com/weharmony/kernel_liteos_a_note",target:"_blank",rel:"noopener noreferrer"}},[t._v("鸿蒙内核源码注释中文版 【 Gitee仓 "),a("OutboundLink")],1),t._v("|"),a("a",{attrs:{href:"https://codechina.csdn.net/kuangyufei/kernel_liteos_a_note",target:"_blank",rel:"noopener noreferrer"}},[t._v(" CSDN仓 "),a("OutboundLink")],1),t._v("|"),a("a",{attrs:{href:"https://github.com/kuangyufei/kernel_liteos_a_note",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Github仓 "),a("OutboundLink")],1),t._v("|"),a("a",{attrs:{href:"https://weharmony.coding.net/public/harmony/kernel_liteos_a_note/git/files",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Coding仓 】"),a("OutboundLink")],1),t._v("精读内核源码,中文详细注解.深挖地基工程,构建底层网图.")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/kuangyufei/article/details/108727970",target:"_blank",rel:"noopener noreferrer"}},[t._v("鸿蒙源码分析系列篇 【 CSDN "),a("OutboundLink")],1),a("a",{attrs:{href:"https://my.oschina.net/u/3751245/blog/4626852",target:"_blank",rel:"noopener noreferrer"}},[t._v("| OSCHINA "),a("OutboundLink")],1),a("a",{attrs:{href:"https://gitee.com/weharmony/kernel_liteos_a_note/wikis/pages",target:"_blank",rel:"noopener noreferrer"}},[t._v("| WIKI 】"),a("OutboundLink")],1),t._v("问答式导读, 生活式比喻, 图形化展示, 层层剥开内核神秘外衣.")]),t._v(" "),a("hr"),t._v(" "),a("p",[a("strong",[a("a",{attrs:{href:"https://my.oschina.net/u/3751245/blog/4869137",target:"_blank",rel:"noopener noreferrer"}},[t._v("内核代码详细结构 >> 进入阅读代码"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("strong",[t._v("目录")])]),t._v(" "),a("p",[a("a",{attrs:{href:"#Task%E9%98%9F%E5%88%97%E7%AF%87"}},[t._v("调度队列篇")])]),t._v(" "),a("p",[a("a",{attrs:{href:"#%E4%B8%BA%E4%BD%95%E5%8D%95%E7%8B%AC%E8%AE%B2%E8%B0%83%E5%BA%A6%E9%98%9F%E5%88%97%EF%BC%9F"}},[t._v("为何单独讲调度队列？")])]),t._v(" "),a("p",[a("a",{attrs:{href:"#%E6%B6%89%E5%8F%8A%E5%87%BD%E6%95%B0"}},[t._v("涉及函数")])]),t._v(" "),a("p",[a("a",{attrs:{href:"#%E4%BD%8D%E5%9B%BE%E8%B0%83%E5%BA%A6%E5%99%A8"}},[t._v("位图调度器")])]),t._v(" "),a("p",[a("a",{attrs:{href:"#%E4%BB%BB%E5%8A%A1%E5%B0%B1%E7%BB%AA%E9%98%9F%E5%88%97%E6%9C%BA%E5%88%B6"}},[t._v("进程就绪队列机制")])]),t._v(" "),a("p",[a("a",{attrs:{href:"#%E5%87%A0%E4%B8%AA%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0"}},[t._v("几个常用函数")])]),t._v(" "),a("p",[a("a",{attrs:{href:"#%E5%90%8C%E4%B8%80%E4%B8%AA%E8%BF%9B%E7%A8%8B%E4%B8%8B%E7%9A%84%E7%BA%BF%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E5%8F%AF%E4%BB%A5%E4%B8%8D%E4%B8%80%E6%A0%B7%E5%90%97%EF%BC%9F"}},[t._v("同一个进程下的线程的优先级可以不一样吗？")])]),t._v(" "),a("p",[a("a",{attrs:{href:"#%E6%80%8E%E4%B9%88%E7%90%86%E8%A7%A3%E7%BA%BF%E7%A8%8B%E7%BB%84%EF%BC%9F"}},[t._v("线程调度器")])]),t._v(" "),a("h2",{attrs:{id:"为何单独讲调度队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为何单独讲调度队列"}},[t._v("#")]),t._v(" 为何单独讲调度队列？")]),t._v(" "),a("p",[t._v("鸿蒙内核代码中有两个源文件是关于队列的，一个是用于调度的队列，另一个是用于线程间通讯的IPC队列。")]),t._v(" "),a("p",[t._v("本文详细讲述调度队列，详见代码: kernel_liteos_a/kernel/base/sched/sched_sq/los_priqueue.c")]),t._v(" "),a("p",[t._v("IPC队列后续有专门的博文讲述，这两个队列的数据结构实现采用的都是双向循环链表，LOS_DL_LIST实在是太重要了，是理解鸿蒙内核的关键，说是最重要的代码一点也不为过，源码出现在 sched_sq模块，说明是用于任务的调度的，sched_sq模块只有两个文件，另一个los_sched.c就是调度代码。")]),t._v(" "),a("h2",{attrs:{id:"涉及函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#涉及函数"}},[t._v("#")]),t._v(" 涉及函数")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-b18bdc78ada27a4812601e628afcff86300.png",alt:""}})]),t._v(" "),a("p",[t._v("鸿蒙内核进程和线程各有32个就绪队列，进程队列用全局变量存放， 创建进程时入队， 任务队列放在进程的threadPriQueueList中。")]),t._v(" "),a("p",[t._v("映射张大爷的故事：就绪队列就是在外面排队的32个通道，按优先级0-31依次排好，张大爷的办公室有个牌子，类似打篮球的记分牌，一共32个，一字排开，队列里有人时对应的牌就是1，没有就是0 ，这样张大爷每次从0位开始看，看到的第一个1那就是最高优先级的那个人。办公室里的记分牌就是位图调度器。")]),t._v(" "),a("h2",{attrs:{id:"位图调度器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#位图调度器"}},[t._v("#")]),t._v(" 位图调度器")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//* 0x80000000U = 10000000000000000000000000000000(32位,1是用于移位的，设计之精妙，点赞) ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("PRIQUEUE_PRIOR0_BIT")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80000000U")]),t._v(" ")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifndef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("CLZ")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name function"}},[t._v("CLZ")]),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__clz")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//汇编指令")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n\nLITE_OS_SEC_BSS LOS_DL_LIST "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("g_priQueueList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//所有的队列 原始指针")]),t._v("\nLITE_OS_SEC_BSS UINT32 g_priQueueBitmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 位图调度")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// priority = CLZ(bitmap); // 获取最高优先级任务队列 调度位")]),t._v("\n\n\n")])])]),a("p",[t._v("整个"),a("a",{attrs:{href:"https://gitee.com/weharmony/kernel_liteos_a/blob/master/kernel/base/sched/sched_sq/los_priqueue.c",target:"_blank",rel:"noopener noreferrer"}},[t._v("los_priqueue.c"),a("OutboundLink")],1),t._v("就只有两个全部变量，一个是 LOS_DL_LIST *g_priQueueList 是32个进程就绪队列的头指针，在就绪队列中会讲另一个UINT32 g_priQueueBitmap  估计很多人会陌生，是一个32位的变量，叫位图调度器。怎么理解它呢？")]),t._v(" "),a("p",[t._v("鸿蒙系统的调度是抢占式的，task分成32个优先级，如何快速的知道哪个队列是空的，哪个队列里有任务需要一个标识，而且要极高效的实现？答案是:位图调度器。")]),t._v(" "),a("p",[t._v("简单说就是一个变量的位来标记对应队列中是否有任务，在位图调度下,任务优先级的值越小则代表具有越高的优先级，每当需要进行调度时,从最低位向最高位查找出第一个置 1 的位的所在位置,即为当前最高优先级,然后从对应优先级就绪队列获得相应的任务控制块,整个调度器的实现复杂度是 O(1),即无论任务多少,其调度时间是固定的。")]),t._v(" "),a("h2",{attrs:{id:"进程就绪队列机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程就绪队列机制"}},[t._v("#")]),t._v(" 进程就绪队列机制")]),t._v(" "),a("p",[t._v("CPU执行速度是很快的，其运算速度和内存的读写速度是数量级的差异，与硬盘的读写更是指数级。 鸿蒙内核默认一个时间片是 10ms,  资源很宝贵，它不断在众多任务中来回的切换，所以绝不能让CPU等待任务，CPU时间很宝贵，没准备好的任务不要放进来。这就是进程和线程就绪队列的机制，一共有32个任务就绪队列，因为线程的优先级是默认32个， 每个队列中放同等优先级的task. 队列初始化做了哪些工作？详细看代码")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("OS_PRIORITY_QUEUE_NUM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")])])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//内部队列初始化")]),t._v("\nUINT32 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsPriQueueInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    UINT32 priority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* system resident resource */")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//常驻内存")]),t._v("\n    g_priQueueList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOS_DL_LIST "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_MemAlloc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m_aucSysMem0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OS_PRIORITY_QUEUE_NUM "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOS_DL_LIST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//分配32个队列头节点")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g_priQueueList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" LOS_NOK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("priority "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" priority "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" OS_PRIORITY_QUEUE_NUM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("priority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_ListInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("g_priQueueList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("priority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//队列初始化,前后指针指向自己")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" LOS_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("因TASK 有32个优先级，在初始化时内核一次性创建了32个双向循环链表，每种优先级都有一个队列来记录就绪状态的tasks的位置，g_priQueueList分配的是一个连续的内存块，存放了32个LOS_DL_LIST，再看一下LOS_DL_LIST结构体，因为它太重要了！越简单越灵活")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LOS_DL_LIST")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LOS_DL_LIST")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pstPrev"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**< Current node's pointer to the previous node */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LOS_DL_LIST")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pstNext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**< Current node's pointer to the next node */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" LOS_DL_LIST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"几个常用函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#几个常用函数"}},[t._v("#")]),t._v(" 几个常用函数")]),t._v(" "),a("p",[t._v("还是看入队和出队的源码吧，注意bitmap的变化！")]),t._v(" "),a("p",[t._v("从代码中可以知道，调用了LOS_ListTailInsert(&priQueueList[priority], priqueueItem); 注意是从循环链表的尾部插入的，也就是同等优先级的TASK被排在了最后一个执行，只要每次都是从尾部插入，就形成了一个按顺序执行的队列。鸿蒙内核的设计可谓非常巧妙，用极少的代码，极高的效率实现了队列功能。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("VOID "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsPriQueueEnqueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOS_DL_LIST "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("priQueueList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" UINT32 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("bitMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LOS_DL_LIST "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("priqueueItem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" UINT32 priority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n     * Task control blocks are inited as zero. And when task is deleted,\n     * and at the same time would be deleted from priority queue or\n     * other lists, task pend node will restored as zero.\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_ASSERT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("priqueueItem"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("pstNext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_ListEmpty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("priQueueList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("priority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("bitMap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|=")]),t._v(" PRIQUEUE_PRIOR0_BIT "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" priority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对应优先级位 置1")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_ListTailInsert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("priQueueList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("priority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" priqueueItem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nVOID "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsPriQueueEnqueueHead")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOS_DL_LIST "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("priQueueList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" UINT32 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("bitMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LOS_DL_LIST "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("priqueueItem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" UINT32 priority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n     * Task control blocks are inited as zero. And when task is deleted,\n     * and at the same time would be deleted from priority queue or\n     * other lists, task pend node will restored as zero.\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_ASSERT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("priqueueItem"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("pstNext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_ListEmpty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("priQueueList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("priority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("bitMap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|=")]),t._v(" PRIQUEUE_PRIOR0_BIT "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" priority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对应优先级位 置1")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_ListHeadInsert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("priQueueList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("priority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" priqueueItem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nVOID "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsPriQueueDequeue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOS_DL_LIST "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("priQueueList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" UINT32 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("bitMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LOS_DL_LIST "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("priqueueItem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    LosTaskCB "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("task "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_ListDelete")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("priqueueItem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    task "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_DL_LIST_ENTRY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("priqueueItem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LosTaskCB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pendList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_ListEmpty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("priQueueList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("task"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("priority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("bitMap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PRIQUEUE_PRIOR0_BIT "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" task"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("priority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//队列空了，对应优先级位 置0")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n\n")])])]),a("h2",{attrs:{id:"同一个进程下的线程的优先级可以不一样吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同一个进程下的线程的优先级可以不一样吗"}},[t._v("#")]),t._v(" 同一个进程下的线程的优先级可以不一样吗？")]),t._v(" "),a("p",[t._v("请先想一下这个问题。")]),t._v(" "),a("p",[t._v("进程和线程是一对多的父子关系，内核调度的单元是任务(线程)，鸿蒙内核中任务和线程是一个东西，只是不同的身份。一个进程可以有多个线程，线程又有各自独立的状态，那进程状态该怎么界定？例如：ProcessA 有 TaskA(阻塞状态) ，TaskB(就绪状态) 两个线程，ProcessA是属于阻塞状态还是就绪状态呢？")]),t._v(" "),a("p",[t._v("先看官方文档的说明后再看源码。")]),t._v(" "),a("p",[a("strong",[t._v("进程状态迁移说明：")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Init→Ready：")]),t._v(" "),a("p",[t._v("进程创建或fork时，拿到该进程控制块后进入Init状态，处于进程初始化阶段，当进程初始化完成将进程插入调度队列，此时进程进入就绪状态。")])]),t._v(" "),a("li",[a("p",[t._v("Ready→Running：")]),t._v(" "),a("p",[t._v("进程创建后进入就绪态，发生进程切换时，就绪列表中最高优先级的进程被执行，从而进入运行态。若此时该进程中已无其它线程处于就绪态，则该进程从就绪列表删除，只处于运行态；若此时该进程中还有其它线程处于就绪态，则该进程依旧在就绪队列，此时进程的就绪态和运行态共存。")])]),t._v(" "),a("li",[a("p",[t._v("Running→Pend：")]),t._v(" "),a("p",[t._v("进程内所有的线程均处于阻塞态时，进程在最后一个线程转为阻塞态时，同步进入阻塞态，然后发生进程切换。")])]),t._v(" "),a("li",[a("p",[t._v("Pend→Ready / Pend→Running：")]),t._v(" "),a("p",[t._v("阻塞进程内的任意线程恢复就绪态时，进程被加入到就绪队列，同步转为就绪态，若此时发生进程切换，则进程状态由就绪态转为运行态。")])]),t._v(" "),a("li",[a("p",[t._v("Ready→Pend：")]),t._v(" "),a("p",[t._v("进程内的最后一个就绪态线程处于阻塞态时，进程从就绪列表中删除，进程由就绪态转为阻塞态。")])]),t._v(" "),a("li",[a("p",[t._v("Running→Ready：")]),t._v(" "),a("p",[t._v("进程由运行态转为就绪态的情况有以下两种：")]),t._v(" "),a("ol",[a("li",[t._v("有更高优先级的进程创建或者恢复后，会发生进程调度，此刻就绪列表中最高优先级进程变为运行态，那么原先运行的进程由运行态变为就绪态。")]),t._v(" "),a("li",[t._v("若进程的调度策略为SCHED_RR，且存在同一优先级的另一个进程处于就绪态，则该进程的时间片消耗光之后，该进程由运行态转为就绪态，另一个同优先级的进程由就绪态转为运行态。")])])]),t._v(" "),a("li",[a("p",[t._v("Running→Zombies：")]),t._v(" "),a("p",[t._v("当进程的主线程或所有线程运行结束后，进程由运行态转为僵尸态，等待父进程回收资源。")])])]),t._v(" "),a("p",[t._v("注意看上面红色的部分，一个进程竟然可以两种状态共存！")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("    UINT16               processStatus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**< [15:4] process Status; [3:0] The number of threads currently\n                                                            running in the process */")]),t._v("\n\n    processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("processStatus "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("status "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" OS_PROCESS_STATUS_PEND"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//取反后的与位运算")]),t._v("\n    processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("processStatus "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|=")]),t._v(" OS_PROCESS_STATUS_READY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//或位运算")]),t._v("\n\n")])])]),a("p",[t._v("一个变量存两种状态，怎么做到的？答案还是 按位保存啊。还记得上面的位图调度 g_priQueueBitmap吗，那可是存了32种状态的。其实这在任何一个系统的内核源码中都很常见，类似的还有 左移 <<，右移 >>等等")]),t._v(" "),a("p",[t._v("继续说进程和线程的关系，线程的优先级必须和进程一样吗？他们可以不一样吗？答案是：当然不一样，否则怎么会有设置task优先级的函数。其实task有专门的bitmap来记录它曾经有过的优先级记录, 比如在调度过程中如果遇到阻塞,内核往往会提高持有锁的task的优先级,让它能以最大概率被下一轮调度选中而快速释放锁资源.")]),t._v(" "),a("h2",{attrs:{id:"task调度器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#task调度器"}},[t._v("#")]),t._v(" task调度器")]),t._v(" "),a("p",[t._v("真正让CPU工作的是task，进程只是个装task的容器，task有任务栈空间，进程结构体LosProcessCB 有一个这样的定义。看名字就知道了，那是跟调度相关的。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("    UINT32               threadScheduleMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**< The scheduling bitmap table for the thread group of the\n                                                            process */")]),t._v("\n    LOS_DL_LIST          threadPriQueueList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("OS_PRIORITY_QUEUE_NUM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**< The process's thread group schedules the\n                                                                         priority hash table */")]),t._v("\n\n")])])]),a("p",[t._v("咋一看怎么进程的结构体里也有32个队列，其实这就是task的就绪状态队列。threadScheduleMap就是进程自己的位图调度器。具体看进程入队和出队的源码。调度过程是先去进程就绪队列里找最高优先级的进程，然后去该进程找最高优先级的线程来调度。具体看笔者认为的内核最美函数OsGetTopTask，能欣赏到他的美就读懂了就绪队列是怎么管理的。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("LITE_OS_SEC_TEXT_MINOR LosTaskCB "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsGetTopTask")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    UINT32 priority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" processPriority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    UINT32 bitmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    UINT32 processBitmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    LosTaskCB "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("newTask "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOSCFG_KERNEL_SMP "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" YES"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n    UINT32 cpuid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ArchCurrCpuid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n    LosProcessCB "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("processCB "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    processBitmap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" g_priQueueBitmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("processBitmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        processPriority "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLZ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("processBitmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_DL_LIST_FOR_EACH_ENTRY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("processCB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("g_priQueueList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("processPriority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LosProcessCB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pendList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            bitmap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("threadScheduleMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bitmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                priority "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLZ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bitmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_DL_LIST_FOR_EACH_ENTRY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newTask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("threadPriQueueList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("priority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LosTaskCB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pendList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOSCFG_KERNEL_SMP "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" YES"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newTask"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("cpuAffiMask "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1U")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" cpuid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n                        newTask"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("taskStatus "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v("OS_TASK_STATUS_READY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsPriQueueDequeue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("threadPriQueueList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                          "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("threadScheduleMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                          "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("newTask"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("pendList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsDequeEmptySchedMap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("processCB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("goto")]),t._v(" OUT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOSCFG_KERNEL_SMP "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" YES"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                bitmap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1U")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OS_PRIORITY_QUEUE_NUM "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" priority "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        processBitmap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1U")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OS_PRIORITY_QUEUE_NUM "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" processPriority "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nOUT"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" newTask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n")])])]),a("p",[t._v("映射张大爷的故事：张大爷喊到张全蛋时进场时表演时，张全蛋要决定自己的哪个节目先表演，也要查下他的清单上优先级，它同样也有个张大爷同款记分牌，就这么简单。")]),t._v(" "),a("h3",{attrs:{id:"喜欢就关注下吧-您的关注真的很重要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#喜欢就关注下吧-您的关注真的很重要"}},[t._v("#")]),t._v(" "),a("strong",[t._v("喜欢就关注下吧,您的关注真的很重要")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/weharmony/kernel_liteos_a_note/raw/master/zzz/pic/other/wxcode.png",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("作者邮箱:weharmony@126.com")]),t._v(" "),a("hr"),t._v(" "),a("p",[a("a",{attrs:{href:"https://gitee.com/weharmony/kernel_liteos_a_note",target:"_blank",rel:"noopener noreferrer"}},[t._v("鸿蒙内核源码注释中文版 【 Gitee仓 "),a("OutboundLink")],1),t._v("|"),a("a",{attrs:{href:"https://codechina.csdn.net/kuangyufei/kernel_liteos_a_note",target:"_blank",rel:"noopener noreferrer"}},[t._v(" CSDN仓 "),a("OutboundLink")],1),t._v("|"),a("a",{attrs:{href:"https://github.com/kuangyufei/kernel_liteos_a_note",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Github仓 "),a("OutboundLink")],1),t._v("|"),a("a",{attrs:{href:"https://weharmony.coding.net/public/harmony/kernel_liteos_a_note/git/files",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Coding仓 】"),a("OutboundLink")],1),t._v("精读内核源码,中文详细注解.深挖地基工程,构建底层网图.")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/kuangyufei/article/details/108727970",target:"_blank",rel:"noopener noreferrer"}},[t._v("鸿蒙源码分析系列篇 【 CSDN "),a("OutboundLink")],1),a("a",{attrs:{href:"https://my.oschina.net/u/3751245/blog/4626852",target:"_blank",rel:"noopener noreferrer"}},[t._v("| OSCHINA "),a("OutboundLink")],1),a("a",{attrs:{href:"https://gitee.com/weharmony/kernel_liteos_a_note/wikis/pages",target:"_blank",rel:"noopener noreferrer"}},[t._v("| WIKI 】"),a("OutboundLink")],1),t._v("问答式导读, 生活式比喻, 图形化展示, 层层剥开内核神秘外衣.")])])}),[],!1,null,null,null);s.default=e.exports}}]);