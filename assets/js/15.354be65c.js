(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{383:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("a",{attrs:{href:"https://gitee.com/weharmony/kernel_liteos_a_note",target:"_blank",rel:"noopener noreferrer"}},[t._v("鸿蒙内核源码注释中文版 【 Gitee仓 "),a("OutboundLink")],1),t._v("|"),a("a",{attrs:{href:"https://codechina.csdn.net/kuangyufei/kernel_liteos_a_note",target:"_blank",rel:"noopener noreferrer"}},[t._v(" CSDN仓 "),a("OutboundLink")],1),t._v("|"),a("a",{attrs:{href:"https://github.com/kuangyufei/kernel_liteos_a_note",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Github仓 "),a("OutboundLink")],1),t._v("|"),a("a",{attrs:{href:"https://weharmony.coding.net/public/harmony/kernel_liteos_a_note/git/files",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Coding仓 】"),a("OutboundLink")],1),t._v("精读内核源码,中文详细注解.深挖地基工程,构建底层网图.")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/kuangyufei/article/details/108727970",target:"_blank",rel:"noopener noreferrer"}},[t._v("鸿蒙源码分析系列篇 【 CSDN "),a("OutboundLink")],1),a("a",{attrs:{href:"https://my.oschina.net/u/3751245/blog/4626852",target:"_blank",rel:"noopener noreferrer"}},[t._v("| OSCHINA "),a("OutboundLink")],1),a("a",{attrs:{href:"https://gitee.com/weharmony/kernel_liteos_a_note/wikis/pages",target:"_blank",rel:"noopener noreferrer"}},[t._v("| WIKI 】"),a("OutboundLink")],1),t._v("问答式导读, 生活式比喻, 图形化展示, 层层剥开内核神秘外衣.")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("本文分析虚拟内存模块源码 详见:../kernel/base/vm 本篇源码超级多，很烧脑，但笔者关键处都加了注释。废话不多说，开始吧。")]),t._v(" "),a("p",[a("strong",[t._v("目录")])]),t._v(" "),a("p",[t._v("初始化整个内存")]),t._v(" "),a("p",[t._v("鸿蒙虚拟内存全景图")]),t._v(" "),a("p",[t._v("内核空间是怎么初始化的？")]),t._v(" "),a("p",[t._v("Page是如何初始化的？")]),t._v(" "),a("p",[t._v("进程是如何申请内存的？")]),t._v(" "),a("p",[t._v("task是如何申请内存的？")]),t._v(" "),a("h3",{attrs:{id:"初始化整个内存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化整个内存"}},[t._v("#")]),t._v(" 初始化整个内存")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200927094931590.png",alt:""}})]),t._v(" "),a("p",[t._v("从main()跟踪可看内存部分初始化是在OsSysMemInit()中完成的。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("UINT32 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsSysMemInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    STATUS_T ret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsKSpaceInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//内核空间初始化")]),t._v("\n\n    ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsKHeapInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OS_KHEAP_BLOCK_SIZE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 内核动态内存初始化 512K   ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" LOS_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("VM_ERR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OsKHeapInit fail"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" LOS_NOK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsVmPageStartup")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// page初始化")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsInitMappingStartUp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 映射初始化")]),t._v("\n\n    ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ShmInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 共享内存初始化")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("VM_ERR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ShmInit fail"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" LOS_NOK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" LOS_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"鸿蒙虚拟内存整体布局图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#鸿蒙虚拟内存整体布局图"}},[t._v("#")]),t._v(" 鸿蒙虚拟内存整体布局图")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-ba26317141bf49e1f29bf4129a9d77109b4.png",alt:""}})]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HarmonyOS 内核空间包含以下各段:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" CHAR __int_stack_start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 运行系统函数栈的开始地址")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" CHAR __rodata_start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ROM开始地址 只读")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" CHAR __rodata_end"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ROM结束地址")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" CHAR __bss_start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bss开始地址")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" CHAR __bss_end"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bss结束地址")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" CHAR __text_start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 代码区开始地址")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" CHAR __text_end"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 代码区结束地址")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" CHAR __ram_data_start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// RAM开始地址 可读可写")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" CHAR __ram_data_end"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// RAM结束地址")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" UINT32 __heap_start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 堆区开始地址")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" UINT32 __heap_end"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 堆区结束地址")]),t._v("\n\n")])])]),a("p",[t._v("内存一开始一张白纸，这些extern就是给它画大界线的，从哪到哪是属于什么段。这些值大小取决实际项目内存条的大小，不同的内存条，地址肯定会不一样，所以必须由外部提供，鸿蒙内核采用了Linux的段管理方式。结合上图对比以下的解释自行理解下位置。")]),t._v(" "),a("p",[t._v("BSS段 （bss segment）通常是指用来存放程序中未初始化的全局变量的一块内存区域。BSS是英文Block Started by Symbol的简称。BSS段属于静态内存分配。该段用于存储未初始化的全局变量或者是默认初始化为0的全局变量，它不占用程序文件的大小，但是占用程序运行时的内存空间。")]),t._v(" "),a("p",[t._v("data段 该段用于存储初始化的全局变量，初始化为0的全局变量出于编译优化的策略还是被保存在BSS段。")]),t._v(" "),a("p",[t._v("细心的读者可能发现了，鸿蒙内核几乎所有的全局变量都没有赋初始化值或NULL，这些变量经过编译后是放在了BSS段的，运行时占用内存空间，如此编译出来的ELF包就变小了。")]),t._v(" "),a("p",[t._v(".rodata段,该段也叫常量区，用于存放常量数据，ro就是Read Only之意。")]),t._v(" "),a("p",[t._v("text段 是用于存放程序代码的，编译时确定,只读。更进一步讲是存放处理器的机器指令，当各个源文件单独编译之后生成目标文件，经连接器链接各个目标文件并解决各个源文件之间函数的引用，与此同时，还得将所有目标文件中的.text段合在一起。")]),t._v(" "),a("p",[t._v("stack栈段，是由系统负责申请释放，用于存储参数变量及局部变量以及函数的执行。")]),t._v(" "),a("p",[t._v("heap段 它由用户申请和释放，申请时至少分配虚存，当真正存储数据时才分配相应的实存，释放时也并非立即释放实存，而是可能被重复利用。")]),t._v(" "),a("h3",{attrs:{id:"内核空间是怎么初始化的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内核空间是怎么初始化的"}},[t._v("#")]),t._v(" 内核空间是怎么初始化的？")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("LosMux g_vmSpaceListMux"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//虚拟空间互斥锁,一般和g_vmSpaceList配套使用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_DL_LIST_HEAD")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g_vmSpaceList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//g_vmSpaceList把所有虚拟空间挂在一起,")]),t._v("\nLosVmSpace g_kVmSpace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//内核空间地址")]),t._v("\nLosVmSpace g_vMallocSpace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//虚拟分配空间地址")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//鸿蒙内核空间有两个(内核进程空间和内核动态分配空间),共用一张L1页表")]),t._v("\nVOID "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsKSpaceInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsVmMapInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化互斥量")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsKernVmSpaceInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("g_kVmSpace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsGFirstTableGet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化内核虚拟空间，OsGFirstTableGet 为L1表基地址")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsVMallocSpaceInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("g_vMallocSpace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsGFirstTableGet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化动态分配区虚拟空间，OsGFirstTableGet 为L1表基地址")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//g_kVmSpace g_vMallocSpace 共用一个L1页表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化内核堆空间")]),t._v("\nSTATUS_T "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsKHeapInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size_t size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    STATUS_T ret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    VOID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ptr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n     * roundup to MB aligned in order to set kernel attributes. kernel text/code/data attributes\n     * should page mapping, remaining region should section mapping. so the boundary should be\n     * MB aligned.\n     */")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//向上舍入到MB对齐是为了设置内核属性。内核文本/代码/数据属性应该是页映射，其余区域应该是段映射,所以边界应该对齐。")]),t._v("\n    UINTPTR end "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ROUNDUP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g_vmBootMemBase "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//用M是因为采用section mapping 鸿蒙内核源码分析(内存映射篇)有阐述")]),t._v("\n    size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" end "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" g_vmBootMemBase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ROUNDUP(0x00000200+512,1024) = 1024  ROUNDUP(0x00000201+512,1024) = 2048 此处需细品! ")]),t._v("\n    ptr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsVmBootMemAlloc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//因刚开机，使用引导分配器分配")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("ptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PRINT_ERR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vmm_kheap_init boot_alloc_mem failed! %d\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    m_aucSysMem0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m_aucSysMem1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//内存池基地址，取名auc还用0和1来标识有何深意,一直没整明白, 哪位大神能告诉下?")]),t._v("\n    ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_MemInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m_aucSysMem0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化内存池")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" LOS_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PRINT_ERR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vmm_kheap_init LOS_MemInit failed!\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        g_vmBootMemBase "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//分配失败时需归还size, g_vmBootMemBase是很野蛮粗暴的")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_MemExpandEnable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OS_SYS_MEM_ADDR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//地址可扩展")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" LOS_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("内核空间用了三个全局变量，其中一个是互斥LosMux，IPC部分会详细讲，这里先不展开。 比较有意思的是LOS_DL_LIST_HEAD，看内核源码过程中经常会为这样的代码点头称赞，会心一笑。点赞！")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name function"}},[t._v("LOS_DL_LIST_HEAD")]),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" LOS_DL_LIST list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])]),t._v("\n")])])]),a("h3",{attrs:{id:"page是如何初始化的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#page是如何初始化的"}},[t._v("#")]),t._v(" Page是如何初始化的？")]),t._v(" "),a("p",[t._v("page是映射的最小单位，是物理地址<---\x3e虚拟地址映射的数据结构的基础")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// page初始化")]),t._v("\nVOID "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsVmPageStartup")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VmPhysSeg")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("seg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    LosVmPage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("page "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    paddr_t pa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    UINT32 nPage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    INT32 segID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsVmPhysAreaSizeAdjust")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ROUNDUP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g_vmBootMemBase "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" KERNEL_ASPACE_BASE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PAGE_SIZE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//校正 g_physArea size")]),t._v("\n\n    nPage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsVmPhysPageNumGet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//得到 g_physArea 总页数")]),t._v("\n    g_vmPageArraySize "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nPage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LosVmPage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//页表总大小")]),t._v("\n    g_vmPageArray "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LosVmPage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsVmBootMemAlloc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g_vmPageArraySize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//申请页表存放区域")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsVmPhysAreaSizeAdjust")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ROUNDUP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g_vmPageArraySize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PAGE_SIZE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// g_physArea 变小")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsVmPhysSegAdd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 段页绑定")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsVmPhysInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 加入空闲链表和设置置换算法,LRU(最近最久未使用)算法")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("segID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" segID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" g_vmPhysSegNum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" segID"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        seg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("g_vmPhysSeg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("segID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        nPage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" seg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" PAGE_SHIFT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("page "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" seg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("pageBase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pa "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" seg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" page "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" seg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("pageBase "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" nPage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n             page"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pa "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" PAGE_SIZE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsVmPageInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("page"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" segID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//page初始化")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsVmPageOrderListInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("pageBase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nPage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 页面分配的排序")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"进程是如何申请内存的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程是如何申请内存的"}},[t._v("#")]),t._v(" 进程是如何申请内存的？")]),t._v(" "),a("p",[t._v("进程的主体是来自进程池，进程池是统一分配的，怎么创建进程池的去翻系列篇里的文章，所以创建一个进程的时候只需要分配虚拟内存LosVmSpace，这里要分内核模式和用户模式下的申请。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化进程的 用户空间 或 内核空间")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化PCB块")]),t._v("\nSTATIC UINT32 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsInitPCB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LosProcessCB "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("processCB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" UINT32 mode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" UINT16 priority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" UINT16 policy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" CHAR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    UINT32 count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    LosVmSpace "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("space "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    LosVmPage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("vmPage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    status_t status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    BOOL retVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" FALSE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("processMode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//用户态进程还是内核态进程")]),t._v("\n    processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("processStatus "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OS_PROCESS_STATUS_INIT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//进程初始状态")]),t._v("\n    processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("parentProcessID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OS_INVALID_VALUE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//爸爸进程，外面指定")]),t._v("\n    processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("threadGroupID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OS_INVALID_VALUE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//所属线程组")]),t._v("\n    processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("priority "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" priority"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//优先级")]),t._v("\n    processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("policy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" policy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//调度算法 LOS_SCHED_RR")]),t._v("\n    processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("umask "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OS_PROCESS_DEFAULT_UMASK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//掩码")]),t._v("\n    processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("timerID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timer_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UINTPTR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("MAX_INVALID_TIMER_VID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_ListInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("threadSiblingList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化任务/线程链表")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_ListInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("childrenList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化孩子链表")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_ListInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("exitChildList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化记录哪些孩子退出了的链表    ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_ListInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("waitList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化等待链表")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" OS_PRIORITY_QUEUE_NUM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//根据 priority数 创建对应个数的队列")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_ListInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("threadPriQueueList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsProcessIsUserMode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("processCB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否为用户态进程")]),t._v("\n        space "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_MemAlloc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m_aucSysMem0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LosVmSpace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("space "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PRINT_ERR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%s %d, alloc space failed\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __FUNCTION__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("__LINE__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" LOS_ENOMEM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        VADDR_T "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ttb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_PhysPagesAllocContiguous")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//分配一个物理页用于存储L1页表 4G虚拟内存分成 （4096*1M）")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ttb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里直接获取物理页ttb")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PRINT_ERR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%s %d, alloc ttb or space failed\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __FUNCTION__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("__LINE__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_MemFree")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m_aucSysMem0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" space"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" LOS_ENOMEM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("memset_s")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ttb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PAGE_SIZE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PAGE_SIZE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        retVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsUserVmSpaceInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("space"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ttb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化虚拟空间和本进程 mmu")]),t._v("\n        vmPage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsVmVaddrToPage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ttb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过虚拟地址拿到page")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("retVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" FALSE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vmPage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//异常处理")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PRINT_ERR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"create space failed! ret: %d, vmPage: %#x\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" retVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vmPage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("processStatus "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OS_PROCESS_FLAG_UNUSED"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//进程未使用,干净")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_MemFree")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m_aucSysMem0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" space"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//释放虚拟空间")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_PhysPagesFreeContiguous")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ttb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//释放物理页,4K")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" LOS_EAGAIN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("vmSpace "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" space"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设为进程虚拟空间")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_ListAdd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("vmSpace"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("archMmu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ptList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vmPage"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将空间映射页表挂在 空间的mmu L1页表, L1为表头")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("vmSpace "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_GetKVmSpace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//内核共用一个虚拟空间,内核进程 常驻内存")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifdef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("LOSCFG_SECURITY_VID")])]),t._v("\n    status "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("VidMapListInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("processCB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("status "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" LOS_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PRINT_ERR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"VidMapListInit failed!\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" LOS_ENOMEM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifdef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("LOSCFG_SECURITY_CAPABILITY")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsInitCapability")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("processCB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsSetProcessName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("processCB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" LOS_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" LOS_ENOMEM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" LOS_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nLosVmSpace "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_GetKVmSpace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("g_kVmSpace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("从代码可以看出，内核空间固定只有一个g_kVmSpace，而每个用户进程的虚拟内存空间都是独立的。请细品！")]),t._v(" "),a("h3",{attrs:{id:"task是如何申请内存的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#task是如何申请内存的"}},[t._v("#")]),t._v(" task是如何申请内存的？")]),t._v(" "),a("p",[t._v("task的主体是来自进程池，task池是统一分配的，怎么创建task池的去翻系列篇里的文章。这里task只需要申请stack空间，还是直接上看源码吧，用OsUserInitProcess函数看应用程序的main() 是如何被内核创建任务和运行的。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//所有的用户进程都是使用同一个用户代码段描述符和用户数据段描述符，它们是__USER_CS和__USER_DS，也就是每个进程处于用户态时，它们的CS寄存器和DS寄存器中的值是相同的。当任何进程或者中断异常进入内核后，都是使用相同的内核代码段描述符和内核数据段描述符，它们是__KERNEL_CS和__KERNEL_DS。这里要明确记得，内核数据段实际上就是内核态堆栈段。")]),t._v("\nLITE_OS_SEC_TEXT_INIT UINT32 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsUserInitProcess")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    INT32 ret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    UINT32 size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    TSK_INIT_PARAM_S param "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    VOID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("stack "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    VOID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("userText "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    CHAR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("userInitTextStart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CHAR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("__user_init_entry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//代码区开始位置 ,所有进程")]),t._v("\n    CHAR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("userInitBssStart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CHAR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("__user_init_bss"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 未初始化数据区（BSS）。在运行时改变其值")]),t._v("\n    CHAR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("userInitEnd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CHAR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("__user_init_end"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结束地址")]),t._v("\n    UINT32 initBssSize "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" userInitEnd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" userInitBssStart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    UINT32 initSize "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" userInitEnd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" userInitTextStart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    LosProcessCB "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("processCB "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OS_PCB_FROM_PID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g_userInitProcess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsProcessCreateInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("processCB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OS_USER_MODE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Init"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OS_PROCESS_USERINIT_PRIORITY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化用户进程,它将是所有应用程序的父进程")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" LOS_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    userText "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_PhysPagesAllocContiguous")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initSize "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" PAGE_SHIFT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 分配连续的物理页")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userText "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" LOS_NOK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("goto")]),t._v(" ERROR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("memcpy_s")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" initSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("__user_init_load_addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" initSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 安全copy 经加载器load的结果 __user_init_load_addr -> userText")]),t._v("\n    ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_VaddrToPaddrMmap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("vmSpace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VADDR_T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UINTPTR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("userInitTextStart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_PaddrQuery")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                               initSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" VM_MAP_REGION_FLAG_PERM_READ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" VM_MAP_REGION_FLAG_PERM_WRITE "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n                               VM_MAP_REGION_FLAG_PERM_EXECUTE "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" VM_MAP_REGION_FLAG_PERM_USER"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 虚拟地址与物理地址的映射")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("goto")]),t._v(" ERROR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("memset_s")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UINTPTR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("userText "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" userInitBssStart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" userInitTextStart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" initBssSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" initBssSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 除了代码段，其余都清0")]),t._v("\n\n    stack "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsUserInitStackAlloc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g_userInitProcess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化堆栈区")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stack "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PRINTK")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user init process malloc user stack failed!\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" LOS_NOK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("goto")]),t._v(" ERROR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    param"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pfnTaskEntry "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TSK_ENTRY_FUNC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("userInitTextStart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从代码区开始执行，也就是应用程序main 函数的位置")]),t._v("\n    param"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userParam"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userSP "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UINTPTR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("stack "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指向栈底")]),t._v("\n    param"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userParam"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userMapBase "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UINTPTR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 栈顶")]),t._v("\n    param"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userParam"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userMapSize "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 栈大小")]),t._v("\n    param"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("uwResved "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OS_TASK_FLAG_PTHREAD_JOIN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可结合的（joinable）能够被其他线程收回其资源和杀死")]),t._v("\n    ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsUserInitProcessStart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g_userInitProcess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("param"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个任务，来运行main函数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" LOS_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsUnMMap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("processCB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("vmSpace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" param"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userParam"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userMapBase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" param"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userParam"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userMapSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("goto")]),t._v(" ERROR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" LOS_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nERROR"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_PhysPagesFreeContiguous")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" initSize "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" PAGE_SHIFT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//释放物理内存块")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsDeInitPCB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("processCB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//删除PCB块")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("所有的用户进程都是通过init进程 fork来的， 可以看到创建进程的同时创建了一个task, 入口函数就是代码区的第一条指令,也就是应用程序 main函数。这里再说下stack的大小，不同空间下的task栈空间是不一样的，鸿蒙内核中有三种栈空间size,如下")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("LOSCFG_BASE_CORE_TSK_IDLE_STACK_SIZE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SIZE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x800")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//内核进程，运行在内核空间2K")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("OS_USER_TASK_SYSCALL_SATCK_SIZE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x3000")]),t._v(" ")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//用户进程，通过系统调用创建的task运行在内核空间的 12K")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("OS_USER_TASK_STACK_SIZE")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x100000")])]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//用户进程运行在用户空间的1M")])]),t._v("\n")])])]),a("h3",{attrs:{id:"喜欢就关注下吧-您的关注真的很重要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#喜欢就关注下吧-您的关注真的很重要"}},[t._v("#")]),t._v(" "),a("strong",[t._v("喜欢就关注下吧,您的关注真的很重要")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/weharmony/kernel_liteos_a_note/raw/master/zzz/pic/other/wxcode.png",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("作者邮箱:weharmony@126.com")]),t._v(" "),a("hr"),t._v(" "),a("p",[a("a",{attrs:{href:"https://gitee.com/weharmony/kernel_liteos_a_note",target:"_blank",rel:"noopener noreferrer"}},[t._v("鸿蒙内核源码注释中文版 【 Gitee仓 "),a("OutboundLink")],1),t._v("|"),a("a",{attrs:{href:"https://codechina.csdn.net/kuangyufei/kernel_liteos_a_note",target:"_blank",rel:"noopener noreferrer"}},[t._v(" CSDN仓 "),a("OutboundLink")],1),t._v("|"),a("a",{attrs:{href:"https://github.com/kuangyufei/kernel_liteos_a_note",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Github仓 "),a("OutboundLink")],1),t._v("|"),a("a",{attrs:{href:"https://weharmony.coding.net/public/harmony/kernel_liteos_a_note/git/files",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Coding仓 】"),a("OutboundLink")],1),t._v("精读内核源码,中文详细注解.深挖地基工程,构建底层网图.")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/kuangyufei/article/details/108727970",target:"_blank",rel:"noopener noreferrer"}},[t._v("鸿蒙源码分析系列篇 【 CSDN "),a("OutboundLink")],1),a("a",{attrs:{href:"https://my.oschina.net/u/3751245/blog/4626852",target:"_blank",rel:"noopener noreferrer"}},[t._v("| OSCHINA "),a("OutboundLink")],1),a("a",{attrs:{href:"https://gitee.com/weharmony/kernel_liteos_a_note/wikis/pages",target:"_blank",rel:"noopener noreferrer"}},[t._v("| WIKI 】"),a("OutboundLink")],1),t._v("问答式导读, 生活式比喻, 图形化展示, 层层剥开内核神秘外衣.")])])}),[],!1,null,null,null);s.default=e.exports}}]);