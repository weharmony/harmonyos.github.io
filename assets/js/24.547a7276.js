(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{382:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("a",{attrs:{href:"https://gitee.com/weharmony/kernel_liteos_a_note",target:"_blank",rel:"noopener noreferrer"}},[t._v("鸿蒙内核源码注释中文版 【 Gitee仓 "),a("OutboundLink")],1),t._v("|"),a("a",{attrs:{href:"https://codechina.csdn.net/kuangyufei/kernel_liteos_a_note",target:"_blank",rel:"noopener noreferrer"}},[t._v(" CSDN仓 "),a("OutboundLink")],1),t._v("|"),a("a",{attrs:{href:"https://github.com/kuangyufei/kernel_liteos_a_note",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Github仓 "),a("OutboundLink")],1),t._v("|"),a("a",{attrs:{href:"https://weharmony.coding.net/public/harmony/kernel_liteos_a_note/git/files",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Coding仓 】"),a("OutboundLink")],1),t._v("精读内核源码,中文详细注解.深挖地基工程,构建底层网图.")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/kuangyufei/article/details/108727970",target:"_blank",rel:"noopener noreferrer"}},[t._v("鸿蒙源码分析系列篇 【 CSDN "),a("OutboundLink")],1),a("a",{attrs:{href:"https://my.oschina.net/u/3751245/blog/4626852",target:"_blank",rel:"noopener noreferrer"}},[t._v("| OSCHINA "),a("OutboundLink")],1),a("a",{attrs:{href:"https://gitee.com/weharmony/kernel_liteos_a_note/wikis/pages",target:"_blank",rel:"noopener noreferrer"}},[t._v("| WIKI 】"),a("OutboundLink")],1),t._v("问答式导读, 生活式比喻, 图形化展示, 层层剥开内核神秘外衣.")]),t._v(" "),a("hr"),t._v(" "),a("p",[a("strong",[a("a",{attrs:{href:"https://my.oschina.net/u/3751245/blog/4869137",target:"_blank",rel:"noopener noreferrer"}},[t._v("内核代码详细结构 >> 进入阅读代码"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("strong",[t._v("目录")])]),t._v(" "),a("p",[a("a",{attrs:{href:"#%E5%BB%BA%E8%AE%AE%E5%85%88%E9%98%85%E8%AF%BB"}},[t._v("建议先阅读")])]),t._v(" "),a("p",[a("a",{attrs:{href:"#%E5%85%88%E8%AF%B4%E5%87%A0%E4%B8%AA%E6%A6%82%E5%BF%B5"}},[t._v("为什么学一个东西要学那么多的概念？")])]),t._v(" "),a("p",[a("a",{attrs:{href:"#%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B%E7%9A%84%E7%8A%B6%E6%80%81%E8%BF%81%E7%A7%BB%E5%9B%BE"}},[t._v("进程和线程的状态迁移图")])]),t._v(" "),a("p",[a("a",{attrs:{href:"#%E8%B0%83%E5%BA%A6%E6%98%AF%E5%A6%82%E4%BD%95%E8%A7%A6%E5%8F%91%E7%9A%84%EF%BC%9F"}},[t._v("谁来触发调度工作？")])]),t._v(" "),a("p",[a("a",{attrs:{href:"#%E8%B0%83%E5%BA%A6%E8%BF%87%E7%A8%8B"}},[t._v("源码告诉你调度过程是怎样的？")])]),t._v(" "),a("p",[a("a",{attrs:{href:"#OsGetTopTask()"}},[t._v("请读懂内核最美函数 OsGetTopTask()")])]),t._v(" "),a("h2",{attrs:{id:"建议先阅读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建议先阅读"}},[t._v("#")]),t._v(" 建议先阅读")]),t._v(" "),a("p",[t._v("阅读之前建议先读本系列其他文章，进入"),a("a",{attrs:{href:"https://blog.csdn.net/kuangyufei/article/details/108727970",target:"_blank",rel:"noopener noreferrer"}},[t._v("鸿蒙系统源码分析(总目录)"),a("OutboundLink")],1),t._v("，以便对本文任务调度机制的理解。")]),t._v(" "),a("h2",{attrs:{id:"为什么学一个东西要学那么多的概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么学一个东西要学那么多的概念"}},[t._v("#")]),t._v(" 为什么学一个东西要学那么多的概念？")]),t._v(" "),a("p",[t._v("鸿蒙的内核中 Task 和 线程 在广义上可以理解为是一个东西，但狭义上肯定会有区别，区别在于管理体系的不同，Task是调度层面的概念，线程是进程层面概念。比如 main() 函数中首个函数 OsSetMainTask(); 就是设置启动任务，但此时啥都还没开始呢，Kprocess 进程都没创建，怎么会有大家一般意义上所理解的线程呢。狭义上的后续有 鸿蒙内核源码分析(启动过程篇) 来说明。不知道大家有没有这种体会，学一个东西的过程中要接触很多新概念，尤其像 Java/android 的生态，概念贼多，很多同学都被绕在概念中出不来，痛苦不堪。那问题是为什么需要这么多的概念呢？")]),t._v(" "),a("p",[t._v("举个例子就明白了：")]),t._v(" "),a("p",[t._v("假如您去深圳参加一个面试老板问你哪里人？你会说是 江西人，湖南人... 而不会说是张家村二组的张全蛋，这样还谁敢要你。但如果你参加同乡会别人问你同样问题，你不会说是来自东北那旮沓的，却反而要说张家村二组的张全蛋。明白了吗？张全蛋还是那个张全蛋，但因为场景变了，您的说法就得必须跟着变，否则没法愉快的聊天。程序设计就是源于生活，归于生活，大家对程序的理解就是要用生活中的场景去打比方，更好的理解概念。")]),t._v(" "),a("p",[t._v("那在内核的调度层面，咱们只说task, task是内核调度的单元，调度就是围着它转。")]),t._v(" "),a("h2",{attrs:{id:"进程和线程的状态迁移图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程和线程的状态迁移图"}},[t._v("#")]),t._v(" 进程和线程的状态迁移图")]),t._v(" "),a("p",[t._v("先看看task从哪些渠道产生：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200921143623251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2t1YW5neXVmZWk=,size_16,color_FFFFFF,t_70",alt:""}})]),t._v(" "),a("p",[t._v("渠道很多，可能是shell 的一个命令，也可能由内核创建，更多的是大家编写应用程序new出来的一个线程。")]),t._v(" "),a("p",[t._v("调度的内容task已经有了，那他们是如何被有序调度的呢？答案：是32个进程和线程就绪队列，各32个哈，为什么是32个，"),a("a",{attrs:{href:"https://blog.csdn.net/kuangyufei/article/details/108727970",target:"_blank",rel:"noopener noreferrer"}},[t._v("鸿蒙系统源码分析(总目录)"),a("OutboundLink")],1),t._v("文章里有详细说明，自己去翻。这张进程状态迁移示意图一定要看明白，线程的状态迁移大家去官方文档看，不一一列出来，太多了占地方。")]),t._v(" "),a("p",[t._v("注意:进程和线程的队列内的内容只针对就绪状态,其他状态内核并没有用队列去描述它，(线程的阻塞状态用的是pendlist链表)，因为就绪就意味着工作都准备好了就等着被调度到CPU来执行了。所以理解就绪队列很关键，有三种情况会加入就绪队列。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/925ff9ae641e32b2502d7b5a155b8579.png",alt:""}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Init→Ready：")]),t._v(" "),a("p",[t._v("进程创建或fork时，拿到该进程控制块后进入Init状态，处于进程初始化阶段，当进程初始化完成将进程插入调度队列，此时进程进入就绪状态。")])]),t._v(" "),a("li",[a("p",[t._v("Pend→Ready / Pend→Running：")]),t._v(" "),a("p",[t._v("阻塞进程内的任意线程恢复就绪态时，进程被加入到就绪队列，同步转为就绪态，若此时发生进程切换，则进程状态由就绪态转为运行态。")])]),t._v(" "),a("li",[a("p",[t._v("Running→Ready：")]),t._v(" "),a("p",[t._v("进程由运行态转为就绪态的情况有以下两种：")])]),t._v(" "),a("li",[a("p",[t._v("有更高优先级的进程创建或者恢复后，会发生进程调度，此刻就绪列表中最高优先级进程变为运行态，那么原先运行的进程由运行态变为就绪态。")])]),t._v(" "),a("li",[a("p",[t._v("若进程的调度策略为SCHED_RR，且存在同一优先级的另一个进程处于就绪态，则该进程的时间片消耗光之后，该进程由运行态转为就绪态，另一个同优先级的进程由就绪态转为运行态。")])])]),t._v(" "),a("h2",{attrs:{id:"谁来触发调度工作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#谁来触发调度工作"}},[t._v("#")]),t._v(" 谁来触发调度工作？")]),t._v(" "),a("p",[t._v("就绪队列让task各就各位，在其生命周期内不停的进行状态流转，调度是让task交给CPU处理，那又是什么让调度去工作的呢？它是如何被触发的？")]),t._v(" "),a("p",[t._v("笔者能想到的触发方式是以下四个：")]),t._v(" "),a("ul",[a("li",[t._v("Tick(时钟管理)，类似于JAVA的定时任务，时间到了就触发。系统定时器是内核时间机制中最重要的一部分，它提供了一种周期性触发中断机制，即系统定时器以HZ（时钟节拍率）为频率自行触发时钟中断。当时钟中断发生时，内核就通过时钟中断处理程序OsTickHandler对其进行处理。鸿蒙内核默认是10ms触发一次，执行以下中断函数：")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * Description : Tick interruption handler\n */")]),t._v("\nLITE_OS_SEC_TEXT VOID "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsTickHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    UINT32 intSave"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TICK_LOCK")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intSave"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    g_tickCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ArchCurrCpuid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TICK_UNLOCK")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intSave"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifdef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("LOSCFG_KERNEL_VDSO")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsUpdateVdsoTimeval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifdef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("LOSCFG_KERNEL_TICKLESS")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsTickIrqFlagSet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsTicklessFlagGet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOSCFG_BASE_CORE_TICK_HW_TIME "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" YES"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("HalClockIrqClear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* diff from every platform */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsTimesliceCheck")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//时间片检查")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsTaskScan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* task timeout scan */")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//任务扫描，发起调度")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOSCFG_BASE_CORE_SWTMR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" YES"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsSwtmrScan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//软时钟扫描检查")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("里面对任务进行了扫描，时间片到了或就绪队列有高或同级task, 会执行调度。")]),t._v(" "),a("ul",[a("li",[t._v("第二个是各种软硬中断，如何USB插拔，键盘，鼠标这些外设引起的中断，需要去执行中断处理函数。")]),t._v(" "),a("li",[t._v("第三个是程序主动中断，比如运行过程中需要申请其他资源，而主动让出控制权，重新调度。")]),t._v(" "),a("li",[t._v("最后一个是创建一个新进程或新任务后主动发起的抢占式调度，新进程会默认创建一个main task, task的首条指令(入口函数)就是我们上层程序的main函数，它被放在代码段的第一的位置。")]),t._v(" "),a("li",[t._v("哪些地方会申请调度？看一张图。")]),t._v(" "),a("li",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200921155607747.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2t1YW5neXVmZWk=,size_16,color_FFFFFF,t_70",alt:""}})])]),t._v(" "),a("p",[t._v("这里提下图中的 OsCopyProcess(), 这是fork进程的主体函数，可以看出fork之后立即申请了一次调度。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("LITE_OS_SEC_TEXT INT32 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_Fork")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UINT32 flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" CHAR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" TSK_ENTRY_FUNC entry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" UINT32 stackSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    UINT32 cloneFlag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CLONE_PARENT "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" CLONE_THREAD "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" CLONE_VFORK "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" CLONE_FILES"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flags "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v("cloneFlag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PRINT_WARN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Clone dont support some flags!\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    flags "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|=")]),t._v(" CLONE_FILES"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsCopyProcess")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cloneFlag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UINTPTR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("entry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stackSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nSTATIC INT32 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsCopyProcess")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UINT32 flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" CHAR "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" UINTPTR sp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" UINT32 size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    UINT32 intSave"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" processID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    LosProcessCB "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("run "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsCurrProcessGet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    LosProcessCB "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("child "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsGetFreePCB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("child "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("LOS_EAGAIN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    processID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" child"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("processID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsForkInitPCB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" LOS_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("goto")]),t._v(" ERROR_INIT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsCopyProcessResources")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" LOS_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("goto")]),t._v(" ERROR_TASK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsChildSetProcessGroupAndSched")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" LOS_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("goto")]),t._v(" ERROR_TASK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_MpSchedule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OS_MP_CPU_ALL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OS_SCHEDULER_ACTIVE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_Schedule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 申请调度")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" processID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nERROR_TASK"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SCHEDULER_LOCK")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intSave"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsTaskDeleteUnsafe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OS_TCB_FROM_TID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("child"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("threadGroupID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OS_PRO_EXIT_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" intSave"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nERROR_INIT"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsDeInitPCB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("ret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("原来创建一个进程这么简单，真的就是在COPY！")]),t._v(" "),a("h2",{attrs:{id:"源码告诉你调度过程是怎样的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#源码告诉你调度过程是怎样的"}},[t._v("#")]),t._v(" 源码告诉你调度过程是怎样的")]),t._v(" "),a("p",[t._v("以上是需要提前了解的信息，接下来直接上源码看调度过程吧，文件就三个函数，主要就是这个了：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("VOID "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsSchedResched")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_ASSERT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("LOS_SpinHeld")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("g_taskSpin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//调度过程要上锁")]),t._v("\n    newTask "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsGetTopTask")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取最高优先级任务")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsSchedSwitchProcess")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("runProcess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newProcess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//切换进程")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsTaskSwitchCheck")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("runTask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newTask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//任务检查")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsCurrTaskSet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("newTask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//*设置当前任务")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsProcessIsUserMode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newProcess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断是否为用户态,使用用户空间")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsCurrUserTaskSet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newTask"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("userArea"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置任务空间")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* do the task context switch */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OsTaskSchedule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newTask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" runTask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//切换CPU任务上下文")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("函数有点长，笔者留了最重要的几行，看这几行就够了，流程如下:")]),t._v(" "),a("ol",[a("li",[t._v("调度过程要自旋锁，多核情况下只能被一个CPU core 执行. 不允许任何中断发生， 没错，说的是任何事是不能去打断它，否则后果太严重了，这可是内核在切换进程和线程的操作啊。")]),t._v(" "),a("li",[t._v("在就绪队列里找个最高优先级的task")]),t._v(" "),a("li",[t._v("切换进程，就是task归属的那个进程设为运行进程，这里要注意，老的task和老进程只是让出了CPU指令执行权，其他都还在内存,资源也都没有释放.")]),t._v(" "),a("li",[t._v("设置新任务为当前任务")]),t._v(" "),a("li",[t._v("用户模式下需要设置task运行空间，因为每个task栈是不一样的.空间部分具体在系列篇内存中查看")]),t._v(" "),a("li",[t._v("是最重要的，切换任务上下文，参数是新老两个任务，一个要保存现场，一个要恢复现场。")])]),t._v(" "),a("p",[t._v("什么是任务上下文？看"),a("a",{attrs:{href:"https://blog.csdn.net/kuangyufei/article/details/108727970",target:"_blank",rel:"noopener noreferrer"}},[t._v("鸿蒙系统源码分析(总目录)"),a("OutboundLink")],1),t._v("其他文章，有专门的介绍。这里要说明的是 在CPU的层面，它只认任务上下文！这里看不到任何代码了，因为这是跟CPU相关的，不同的CPU需要去适配不同的汇编代码，所以这些汇编代码不会出现在一个通用工程中。请留意后续 鸿蒙内核源码分析(汇编指令篇)。")]),t._v(" "),a("h2",{attrs:{id:"请读懂内核最美函数-osgettoptask"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请读懂内核最美函数-osgettoptask"}},[t._v("#")]),t._v(" 请读懂内核最美函数 OsGetTopTask()")]),t._v(" "),a("p",[t._v("最后留个作业，读懂这个笔者认为的内核最美函数，就明白了就绪队列是怎么回事了。这里提下goto语句，几乎所有内核代码都会大量的使用goto语句，鸿蒙内核有617个goto远大于264个break,还有人说要废掉goto，你知道内核开发者青睐goto的真正原因吗？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("LITE_OS_SEC_TEXT_MINOR LosTaskCB *OsGetTopTask(VOID)\n{\n    UINT32 priority, processPriority;\n    UINT32 bitmap;\n    UINT32 processBitmap;\n    LosTaskCB *newTask = NULL;\n#if (LOSCFG_KERNEL_SMP == YES)\n    UINT32 cpuid = ArchCurrCpuid();\n#endif\n    LosProcessCB *processCB = NULL;\n    processBitmap = g_priQueueBitmap;\n    while (processBitmap) {\n        processPriority = CLZ(processBitmap);\n        LOS_DL_LIST_FOR_EACH_ENTRY(processCB, &g_priQueueList[processPriority], LosProcessCB, pendList) {\n            bitmap = processCB->threadScheduleMap;\n            while (bitmap) {\n                priority = CLZ(bitmap);\n                LOS_DL_LIST_FOR_EACH_ENTRY(newTask, &processCB->threadPriQueueList[priority], LosTaskCB, pendList) {\n#if (LOSCFG_KERNEL_SMP == YES)\n                    if (newTask->cpuAffiMask & (1U << cpuid)) {\n#endif\n                        newTask->taskStatus &= ~OS_TASK_STATUS_READY;\n                        OsPriQueueDequeue(processCB->threadPriQueueList,\n                                          &processCB->threadScheduleMap,\n                                          &newTask->pendList);\n                        OsDequeEmptySchedMap(processCB);\n                        goto OUT;\n#if (LOSCFG_KERNEL_SMP == YES)\n                    }\n#endif\n                }\n                bitmap &= ~(1U << (OS_PRIORITY_QUEUE_NUM - priority - 1));\n            }\n        }\n        processBitmap &= ~(1U << (OS_PRIORITY_QUEUE_NUM - processPriority - 1));\n    }\n\nOUT:\n    return newTask;\n}\n\n#ifdef __cplusplus\n#if __cplusplus\n}\n")])])]),a("h3",{attrs:{id:"喜欢就关注下吧-您的关注真的很重要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#喜欢就关注下吧-您的关注真的很重要"}},[t._v("#")]),t._v(" "),a("strong",[t._v("喜欢就关注下吧,您的关注真的很重要")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/weharmony/kernel_liteos_a_note/raw/master/zzz/pic/other/wxcode.png",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("作者邮箱:weharmony@126.com")]),t._v(" "),a("hr"),t._v(" "),a("p",[a("a",{attrs:{href:"https://gitee.com/weharmony/kernel_liteos_a_note",target:"_blank",rel:"noopener noreferrer"}},[t._v("鸿蒙内核源码注释中文版 【 Gitee仓 "),a("OutboundLink")],1),t._v("|"),a("a",{attrs:{href:"https://codechina.csdn.net/kuangyufei/kernel_liteos_a_note",target:"_blank",rel:"noopener noreferrer"}},[t._v(" CSDN仓 "),a("OutboundLink")],1),t._v("|"),a("a",{attrs:{href:"https://github.com/kuangyufei/kernel_liteos_a_note",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Github仓 "),a("OutboundLink")],1),t._v("|"),a("a",{attrs:{href:"https://weharmony.coding.net/public/harmony/kernel_liteos_a_note/git/files",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Coding仓 】"),a("OutboundLink")],1),t._v("精读内核源码,中文详细注解.深挖地基工程,构建底层网图.")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/kuangyufei/article/details/108727970",target:"_blank",rel:"noopener noreferrer"}},[t._v("鸿蒙源码分析系列篇 【 CSDN "),a("OutboundLink")],1),a("a",{attrs:{href:"https://my.oschina.net/u/3751245/blog/4626852",target:"_blank",rel:"noopener noreferrer"}},[t._v("| OSCHINA "),a("OutboundLink")],1),a("a",{attrs:{href:"https://gitee.com/weharmony/kernel_liteos_a_note/wikis/pages",target:"_blank",rel:"noopener noreferrer"}},[t._v("| WIKI 】"),a("OutboundLink")],1),t._v("问答式导读, 生活式比喻, 图形化展示, 层层剥开内核神秘外衣.")])])}),[],!1,null,null,null);s.default=e.exports}}]);